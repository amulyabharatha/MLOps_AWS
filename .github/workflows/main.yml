name: CICD_pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches:
      - main
env:
  APPLICATION_NAME: startupapp
  SG_ROLE: ${{ secrets.AWS_SG_ROLE }}
  WORK_DIRECTORY: data
  PREFIX: DEMO-scikit-iris-gus
  FRAMEWORK_VERSION: 1.0-1
  SCRIPT_PATH: train.py
  INSTANCE_TYPE: ml.m5.large
  INITIAL_INSTANCE_COUNT: 1

jobs:
  build_image_push_to_ECR:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    # see: https://github.com/aws-actions/configure-aws-credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # see: https://github.com/aws-actions/amazon-ecr-login check
    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
  submit_training_job:
    needs: [build_image_push_to_ECR]
    runs-on: [ubuntu-latest]
    container: docker://dvcorg/cml-py3:latest
    steps:
    - uses: actions/checkout@v2
    - name: Fire SageMaker
      id: sm_train
      env:
        repo_token: ${{ secrets.TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        #BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        PREFIX: DEMO-scikit-iris-gus
        IAM_ROLE_NAME: ${{ secrets.AWS_SG_ROLE }}
        GITHUB_SHA: ${{ github.sha }}
      run: |
        pip install --no-cache-dir --upgrade awscli pandas boto3 sagemaker requests fsspec s3fs tabulate
        pip install -r requirements-dev.txt
        python app2.py
